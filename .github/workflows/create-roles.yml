name: Create Deployment IAM Roles and Policies

on:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write
  id-token: write

jobs:
  create_iam_roles_and_policies:
    name: 'Creates IAM Roles and Polcies that will allow us to deploy resources.'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup OIDC to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::468260221093:role/AdministratePoliciesAndRoles
          aws-region: ca-central-1
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest
      
      - name: Terraform init
        run: terraform init
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Scan code with tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true
          additional_args: --tfvars-file=terraform.tfvars
      
      - name: Terraform Plan
        id: plan
        run: terraform plan -target=module.aws_setup_iam_role -no-color -out=tfplan
        continue-on-error: true

      - name: Show Plan
        run: terraform show -no-color tfplan > plan.txt

      - name: Add Plan to PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('plan.txt', 'utf8');

            const output = `#### Terraform Plan üìù\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${plan}
            \`\`\`

            </details>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan